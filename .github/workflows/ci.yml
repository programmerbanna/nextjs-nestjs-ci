# name: Fullstack CI Pipeline (NextJs & NestJs)

# on:
#   push:
#     branches:
#       - "feature/*"

# jobs:
#   lint_frontend:
#     name: Lint Next.js (Frontend)
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install pnpm
#         run: npm install -g pnpm

#       - name: Install Frontend Dependencies
#         working-directory: ./frontend
#         run: pnpm install

#       - name: Run Frontend Linter
#         working-directory: ./frontend
#         run: pnpm lint

#   lint_backend:
#     name: Lint Nest.js (Backend)
#     runs-on: ubuntu-latest
#     needs: lint_frontend

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install pnpm
#         run: npm install -g pnpm

#       - name: Install Backend Dependencies
#         working-directory: ./backend
#         run: pnpm install

#       - name: Run Backend Linter
#         working-directory: ./backend
#         run: pnpm lint

#   code_quality_frontend:
#     name: Code Quality Check - Next.js
#     runs-on: ubuntu-latest
#     needs: lint_backend

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install pnpm
#         run: npm install -g pnpm

#       - name: Install Frontend Dependencies
#         working-directory: ./frontend
#         run: pnpm install

#       - name: Run Code Quality Check (Frontend)
#         working-directory: ./frontend
#         run: pnpm run code-quality

#   code_quality_backend:
#     name: Code Quality Check - Nest.js
#     runs-on: ubuntu-latest
#     needs: code_quality_frontend

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install pnpm
#         run: npm install -g pnpm

#       - name: Install Backend Dependencies
#         working-directory: ./backend
#         run: pnpm install

#       - name: Run Code Quality Check (Backend)
#         working-directory: ./backend
#         run: pnpm run code-quality

#   unit_test_frontend:
#     name: Run Unit Tests - Next.js
#     runs-on: ubuntu-latest
#     needs: code_quality_backend

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install pnpm
#         run: npm install -g pnpm

#       - name: Install Frontend Dependencies
#         working-directory: ./frontend
#         run: pnpm install

#       - name: Run Frontend Unit Tests
#         working-directory: ./frontend
#         run: pnpm test

#   unit_test_backend:
#     name: Run Unit Tests - Nest.js
#     runs-on: ubuntu-latest
#     needs: unit_test_frontend

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install pnpm
#         run: npm install -g pnpm

#       - name: Install Backend Dependencies
#         working-directory: ./backend
#         run: pnpm install

#       - name: Run Backend Unit Tests
#         working-directory: ./backend
#         run: pnpm run test

#   merge_to_dev:
#     runs-on: ubuntu-latest
#     needs: [unit_test_frontend, unit_test_backend]
#     steps:
#       - name: Checkout dev branch
#         uses: actions/checkout@v3
#         with:
#           ref: dev

#       - name: Set up Git
#         run: |
#           git config --global user.name "github-actions"
#           git config --global user.email "github-actions@github.com"

#       - name: Fetch all branches
#         run: git fetch origin

#       - name: Extract feature branch name
#         id: extract_branch
#         run: echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV

#       - name: Checkout feature branch
#         run: |
#           git checkout ${{ env.BRANCH_NAME }}

#       - name: Rebase feature branch onto dev
#         run: |
#           git checkout dev
#           git pull origin dev
#           git checkout ${{ env.BRANCH_NAME }}
#           git rebase dev || exit 1

#       - name: Push rebased feature branch
#         run: |
#           git push --force-with-lease origin ${{ env.BRANCH_NAME }}

#       - name: Checkout dev branch
#         run: |
#           git checkout dev

#       - name: Merge feature branch into dev
#         run: |
#           git merge ${{ env.BRANCH_NAME }} --no-ff --no-edit || exit 1

#       - name: Push changes to dev branch
#         run: |
#           git push origin dev

name: Fullstack CI Pipeline (NextJs & NestJs)

on:
  push:
    branches:
      - "feature/*"

jobs:
  lint_frontend:
    name: Lint Next.js (Frontend)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Run Frontend Linter
        working-directory: ./frontend
        run: pnpm lint

  lint_backend:
    name: Lint Nest.js (Backend)
    runs-on: ubuntu-latest
    needs: lint_frontend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: pnpm install

      - name: Run Backend Linter
        working-directory: ./backend
        run: pnpm lint

  code_quality_frontend:
    name: Code Quality Check - Next.js
    runs-on: ubuntu-latest
    needs: lint_backend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Run Code Quality Check (Frontend)
        working-directory: ./frontend
        run: pnpm run code-quality

  code_quality_backend:
    name: Code Quality Check - Nest.js
    runs-on: ubuntu-latest
    needs: code_quality_frontend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: pnpm install

      - name: Run Code Quality Check (Backend)
        working-directory: ./backend
        run: pnpm run code-quality

  unit_test_frontend:
    name: Run Unit Tests - Next.js
    runs-on: ubuntu-latest
    needs: code_quality_backend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Run Frontend Unit Tests
        working-directory: ./frontend
        run: pnpm test

  unit_test_backend:
    name: Run Unit Tests - Nest.js
    runs-on: ubuntu-latest
    needs: unit_test_frontend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: pnpm install

      - name: Run Backend Unit Tests
        working-directory: ./backend
        run: pnpm run test

  merge_to_dev:
    name: Merge Feature Branch to Dev
    runs-on: ubuntu-latest
    needs: [unit_test_frontend, unit_test_backend]
    steps:
      - name: Checkout feature branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }} # Check out the current feature branch

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Fetch dev branch
        run: git fetch origin dev

      - name: Rebase feature branch onto dev
        run: |
          git rebase origin/dev || exit 1

      - name: Push rebased feature branch
        run: git push --force-with-lease origin ${{ github.ref }}

      - name: Checkout dev branch
        run: git checkout dev

      - name: Merge rebased feature branch into dev
        run: |
          git merge ${{ github.ref }} --no-ff --no-edit || exit 1

      - name: Push merged changes to dev branch
        run: git push origin dev
